# -*- coding: utf-8 -*-
"""matplotlib class exercise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DZKwNmyBtYL65R59NcL5C8LTgXQ0DkX8
"""

import tensorflow as tf 
import matplotlib.pyplot as plt
import numpy as np
mnist = tf.keras.datasets.fashion_mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

model = tf.keras.models.Sequential([
                                    
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'), 
  tf.keras.layers.Dense(64),
])

predictions = model(x_train[:20]).numpy()
tf.nn.softmax(predictions).numpy()

loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
loss_fn(y_train[:20], predictions).numpy()

model.compile(optimizer='adam',
              loss=loss_fn,
              metrics=['accuracy'])

data=np.arange(9).reshape((3,3))
plt.imshow(data)
plt.xlim(0.5, 1.5)
plt.imshow(data)
plt.ylim(0.5,1.5)

for i in range(16):
  plt.subplot(4, 4, 1+i)
  plt.imshow(x_train[i], cmap=plt.get_cmap('gray'))
  
  plt.subplot(4, 4, 1+i)
  plt.imshow(x_train[i])
  # remove grey to see top. map in color///